from pydantic import BaseModel, Field
from typing import Optional
from datetime import date

# Schema for validating incoming task creation requests (no id field)
class TaskCreateSchema(BaseModel):
    title: str = Field(..., min_length=1)
    description: Optional[str]
    status: str = Field(..., min_length=1)
    due_date: Optional[date]  # Proper date validation

    class Config:
        extra = 'ignore'  # Ignore any additional fields

# Schema for representing task objects (including id)
class TaskSchema(BaseModel):
    id: int  # 'id' is included since it's generated by the database
    title: str
    description: Optional[str]
    status: str
    due_date: Optional[date]

    class Config:
        from_attributes = True  # Enable ORM mode to work with SQLAlchemy models
